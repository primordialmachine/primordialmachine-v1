# See https://clang.llvm.org/docs/ClangFormatStyleOptions.html for a description of these settings.

# Base this off GNU style.
BasedOnStyle: GNU

# Language is C.
Language: Cpp

# We use tabs for indention with a tab width of four spaces.
TabWidth: 2
UseTab: Never
IndentWidth: 2

# Column limit is 100.
ColumnLimit: 100

# Pointer Alignment.
# Use T* v.
# Do not try to determine alignment from file.
PointerAlignment: Left
DerivePointerAlignment: false

# Indent case labels.
# switch (...) {
#   case ...:
#   default:
# }
IndentCaseLabels: true

# When to add a space before '(' and ')'.
# Add space before '(' in control statements, otherwise do not add space before '('.
SpaceBeforeParens: ControlStatements

# Do not allow
# T f() { ... }
# only allow
# T f() {
# }
AllowShortFunctionsOnASingleLine: false

# When to add a break before '{' and '}'.
BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterControlStatement: Never
  AfterClass: false           # Not required for C.
  AfterEnum: false
  AfterExternBlock: false
  AfterFunction: false
  AfterNamespace: false       # Not required for C.
  AfterObjCDeclaration: false # Not required for C.
  AfterStruct: false
  AfterUnion: false
  SplitEmptyFunction: false
  BeforeCatch: false          # Not required for C.
  BeforeElse: false
  BeforeWhile: false

# For backwards compatibility: Never break after return type.
# In future: Always break after return type.
AlwaysBreakAfterDefinitionReturnType: None # For function definitions (takes into account PenaltyReturnTypeOnItsOwnLine).
AlwaysBreakAfterReturnType: None           # For function declarations (takes into account PenaltyReturnTypeOnItsOwnLine).
PenaltyReturnTypeOnItsOwnLine: 10000000    # Penalty so high that the return type is never put on its own line.
